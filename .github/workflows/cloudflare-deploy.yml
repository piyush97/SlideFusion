name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build Next.js
        run: npm run build
        env:
          # Use secrets for environment variables
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

      - name: Check for large files
        run: |
          # Create a list of files larger than 25MB
          find .next -type f -size +25M > large_files.txt

          # Skip webpack cache files as they'll be excluded during deployment
          grep -v "cache/webpack" large_files.txt > actionable_large_files.txt

          # If there are any non-webpack cache large files, fail the build
          if [ -s actionable_large_files.txt ]; then
            echo "Found files exceeding Cloudflare's 25MB limit:"
            cat actionable_large_files.txt
            exit 1
          fi
          echo "No problematic large files found."

      - name: Prepare deployment files
        run: |
          # Create a temporary directory for deployment
          mkdir -p .cloudflare-deploy

          # Copy .next directory, excluding webpack cache
          rsync -av --progress .next/ .cloudflare-deploy/ --exclude cache/webpack

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: |
            pages deploy .cloudflare-deploy \
              --project-name=slidefusion \
              --commit-message="${{ github.event.head_commit.message || 'Manual deployment' }}" \
              --branch="${{ github.ref_name }}"
